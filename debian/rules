#!/usr/bin/make -f

# Uncomment this to turn on verbose mode.
#export DH_VERBOSE=1

CFLAGS ?= -Wall -g
LDFLAGS ?=
PREFIX ?= /usr
DATADIR ?= /opt

ifneq (,$(findstring noopt,$(DEB_BUILD_OPTIONS)))
	CFLAGS += -O0
else
	CFLAGS += -O2
endif

LDFLAGS += -Wl,--rpath=$(PREFIX)/lib -Wl,--as-needed -Wl,--unresolved-symbols=ignore-in-shared-libs

configure: configure-stamp
configure-stamp:
	dh_testdir
	# Add here commands to configure the package.
	CFLAGS="$(CFLAGS) -fpie" LDFLAGS="$(LDFLAGS) -pie" \
	       cmake . -DCMAKE_INSTALL_PREFIX=$(PREFIX)

	touch configure-stamp

build: build-stamp

build-stamp: configure-stamp 
	dh_testdir

	# Add here commands to compile the package.
	$(MAKE)

	for f in `find $(CURDIR)/debian/ -name "*.in"`; do \
		cat $$f > $${f%.in}; \
		sed -i -e "s#@PREFIX@#$(PREFIX)#g" $${f%.in}; \
		sed -i -e "s#@DATADIR@#$(DATADIR)#g" $${f%.in}; \
	done

	touch $@

clean:
	dh_testdir
	dh_testroot
	rm -f build-stamp configure-stamp

	# Add here commands to clean up after the build process.
	-$(MAKE) clean

	for f in `find $(CURDIR)/ -name "CMakeCache.txt"`; do \
		rm -f $${f}; \
	done
	for f in `find $(CURDIR)/ -name "CMakeFiles"`; do \
		rm -rf $${f}; \
	done
	for f in `find $(CURDIR)/ -name "cmake_install.cmake"`; do \
		rm -f $${f}; \
	done
#	for f in `find $(CURDIR)/ -name "Makefile"`; do \
		rm -f $${f}; \
	done
	for f in `find $(CURDIR)/ -name "install_manifest.txt"`; do \
		rm -f $${f}; \
	done
	for f in `find $(CURDIR)/ -name "*.edj"`; do \
		rm -f $${f}; \
	done
	for f in `find $(CURDIR)/debian/ -name "*.in"`; do \
		rm -f $${f%.in}; \
	done

	rm -f Makefile
	rm -f lib/Makefile
	rm -f bluetooth-frwk-agent/Makefile
	rm -f bluetooth-pb-agent/Makefile
	rm -f bluetooth-map-agent/Makefile
	rm -f bluetooth-frwk-agent/po/Makefile
	rm -f lib/test/Makefile

	rm -f lib/*.pc
	rm -f lib/marshal.c
	rm -f lib/marshal.h
	rm -f lib/obex-agent-glue.h

	rm -f bluetooth-frwk-agent/marshal.c
	rm -f bluetooth-frwk-agent/marshal.h
	rm -f bluetooth-telephony/marshal.c
	rm -f bluetooth-telephony/marshal.h

	rm -f bluetooth-frwk-agent/sc_core_agent_glue.h
	rm -f bluetooth-frwk-agent/bluetooth_obex_agent_glue.h
	rm -f bluetooth-pb-agent/bluetooth_pb_agent_glue.h
	rm -f bluetooth-map-agent/bluetooth_map_agent_glue.h
	rm -f bluetooth-telephony/bluetooth-telephony-glue.h

	rm -f bluetooth-media-control/Makefile
	rm -f bluetooth-media-control/bluetooth-media-control.pc
	rm -f bluetooth-media-control/test/Makefile

	dh_clean

install: build
	dh_testdir
	dh_testroot
	dh_clean -k
	dh_installdirs

	# Add here commands to install the package into debian/wavplayer.
	$(MAKE) DESTDIR=$(CURDIR)/debian/tmp install

	# Booting script
	mkdir -p $(CURDIR)/debian/tmp/etc/rc.d/rc3.d/
	mkdir -p $(CURDIR)/debian/tmp/etc/rc.d/rc5.d/
	ln -s ../init.d/bluetooth-frwk-agent $(CURDIR)/debian/tmp/etc/rc.d/rc3.d/S80bluetooth-frwk-agent
	ln -s ../init.d/bluetooth-frwk-agent $(CURDIR)/debian/tmp/etc/rc.d/rc5.d/S80bluetooth-frwk-agent

# Build architecture-independent files here.
binary-indep: build install
# We have nothing to do by default.

# Build architecture-dependent files here.
binary-arch: build install
	dh_testdir
	dh_testroot
	dh_installchangelogs
	dh_installdocs
	dh_installexamples
	dh_install --sourcedir=debian/tmp
#	dh_installmenu
#	dh_installdebconf
#	dh_installlogrotate
#	dh_installemacsen
#	dh_installpam
#	dh_installmime
#	dh_python
#	dh_installinit
#	dh_installcron
#	dh_installinfo
	dh_installman
	dh_link
	dh_strip --dbg-package=bluetooth-frwk-dbg
	dh_compress
	dh_fixperms
#	dh_perl
	dh_makeshlibs
	dh_installdeb
	dh_shlibdeps
	dh_gencontrol
	dh_md5sums
	dh_builddeb

binary: binary-indep binary-arch
.PHONY: build clean binary-indep binary-arch binary install configure
